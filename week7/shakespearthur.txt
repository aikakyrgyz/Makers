\l
create database test;
\l
\c test
\d
\dt
\c postgres
\dt
\d
\l
drop database test;
\l
\du
create user test_user with password '1';
 \du
alter role test_user with superuser
\du
;
\du
create database test_user;
\l
\du
\l
\c postgres
\c postgres
\c test_user
\l
grant all privilages on database test_user to test_user
\l
\du
grant all privilages on database test_user to test_user;
grant all privileges on database test_user to test_user;
\l
\du
\q
drop user test_user
;
drop user 
drop user 'test_user';
drop user test_user
;
\du
revoke all privileges on test_user from test_user
;
alter role test_user NOSUPERUSER;
\l
\du
drop test_user
;
drop user test_user;
drop test_user
;
drop database test_user;
drop user test_user;
\du
\du
\l
\l
create database test with owner user_test
;
create user user_test;
\l
\du
create database test with owner user_test
;
\l
drop user test;
drop user user_test;
\c test
alter role user_test with superuser;
grant all privilages on test to user_test;
grant all privileges on test to user_test;
drop user user_test;
drop database test;
drop user user_test;
\du
create user test_user with password '1';
create database db;
\du
\l
\du
alter role test_user with superuser;
grant all privileges on db to test_user
;
\du
\c db
grant all privilages on db to test_user;
grant all privileges on db to test_user;
\c postgres
create database test_user
;
\l
grant all privileges on db to test_user;
drop user test_user
;
drop db;
drop database db;
drop database test_user;
\l
create user aika with password '1';
\du
\l
create database aika;
\l
alter role aika with superuser;
grant all privileges on database aika to aika
;
\l
\du
\du
\l
\c aika
\c aika
\du
\l
\c postgres
drop database aika
;
drop user aika
;
drop user aika
;
\k
\l
create user aika;
alter role aika with superuser;
create database db with owner aika;
\l
grant all privileges on db to aika
;
drop database db;
drop user aika;
\du
\l
create user aika with password '1'
;
alter role aika with superuser;
grant all privileges on aika to aika
;
grant all privileges on database aika to aika
;
\l
create database aika;
grant all privileges on database aika to aika
;
\l
create database kfc_menu
;
create type detail as enum('food', 'beverage', 'dessert');
create type topping as enum('ketchup', 'ranch', 'bbq', 'mayo', 'mustard');
\c kfc_menu
create type detail as enum('food', 'beverage', 'dessert');
create type topping as enum('ketchup', 'ranch', 'bbq', 'mayo', 'mustard');
create table Dish(
id serial primary key,
title varchar(155) not null;
price money,
type detail,
sauce topping,
is_vegeterian bool default False;
comment varchar(255));
create table Dish(
id serial primary key,
title varchar(155) not null;
price money,
type detail,
sauce topping,
is_vegeterian bool default False,
comment varchar(255));
create table Dish(
id serial primary key,
title varchar(155) not null,
price money,
type detail,
sauce topping,
is_vegeterian bool default False,
comment varchar(255));
alter table dish alter price type decimal;
\dt
\d
\d
\d dish
\i lesson2_inserts.txt
\l
\c postgres;
\c aika
create database db;
\l
create table Person{
;
create table Person(
id serial primary key,
name varchar(50) NOT NULL,
last_name varchar(100),
country varchar(50) NOT NULL);
\dt
\dt person
\d person
\du
\l
create database mydb;
\d
\l
\c mydb
create type language as enum('Python', 'JavaScript');
create table info(
id serial primary key,
name varchar(50) NOT NULL,
lastname varchar(100),
country varchar(60),
email varchar(50) unique,
age int,
programming_language language not null,
experience int);
\d
\dt
\d info
insert into info (name, lastname, country, email, age, programming_language, experience) values ('Aigerim', "Kubanychbek kyzy", "Kyrgyzstan", "aikamusiconly@gmail.com", 21, "Python", 0), ('Zalkar', 'Omurzhanov', 'Kyrgyzstan', 'zo@gmail.com', 21, 'Python', 5);
insert into info (name, lastname, country, email, age, programming_language, experience) values ('Aigerim', 'Kubanychbek kyzy', 'Kyrgyzstan', 'aikamusiconly@gmail.com', 21, 'Python', 0), ('Zalkar', 'Omurzhanov', 'Kyrgyzstan', 'zo@gmail.com', 21, 'Python', 5);
insert into info (name, lastname, country, email, age, programming_language, experience) values ('Anastasia', 'Tuzikova', 'Kyrgyzstan', 'at@gmail.com', 19, 'Python', 0), ('Adilet', 'Nasirov', 'Kyrgyzstan', 'adiletnasirov@gmail.com', 20, 'Python', 2);
\d info
\dt info
select * from info
;
\i info.txt
\l
create database mydb;
\c mydb
eixt
exit
\q
\c mydb
\q
]l
\l
\c shakespear
\c postgres
\c shakespeare
\l
\d
exit
exit
\q
create database db_index;
\c db_index;
create table students(
id serial primary key,
name varchar(50),
last_name varchar(70),
faculty varchar(50),
year int);
\d db_index
\d
\d students
insert into students(name, last_name, faculty, year) values('John', 'Snow', 'IT', 2), ('Sandra', 'Black', 'Business', 3), ('James', 'Collins', 'IT', 2), ('Taylor', 'Baker', 'Medicine', 1), ('Emily', 'Baker', 'History', 4);
\d students
select * from students;
select * from students where id =4;
create index student_id_index on students(id);
\d students;
select * from students where id = 3;
create index faculty_index on students(faculty);
\d students
drop index student_id_index;
\d students
drop table students;
\d
\dt
create table faculty(
id serial primary key,
title varchar(50));
create table students(
id serial primary key,
name varchar(50),
last_name varchar(50),
faculty_id int not null,
constraint fk_students_faculty foreign key(faculty_id) references faculty(id);
);
create table students(
id serial primary key,
name varchar(50),
last_name varchar(50),
faculty_id int not null,
constraint fk_students_faculty foreign key(faculty_id) references faculty(id)
);
\d students
insert into faculty (title) values ('Medicine', 'IT', 'Business', 'Psychology', 'History');
insert into faculty (title) values ('Medicine'), ('IT'), ('Business'),('Psychology'),('History');
select * from faculty;
insert into student(name, last_name, faculty_id) values ('John', 'Snow', 3),('Alice', 'Pumpkin', 1), ('Chris', 'White', 4), ('Emily', 'Baker', 2), ('Bob', 'Smith', 2), ('Emily', 'Justice', 4);
insert into students(name, last_name, faculty_id) values ('John', 'Snow', 3),('Alice', 'Pumpkin', 1), ('Chris', 'White', 4), ('Emily', 'Baker', 2), ('Bob', 'Smith', 2), ('Emily', 'Justice', 4);
select * from students;
select * from student inner join faculty on faculty.id = students.faculty_id;
select * from students inner join faculty on faculty.id = students.faculty_id;
select s.name, s.last_name, f.title from students as s inner join faculty as f on s.faculty_id = f.id;
create index student_faculty_id_index on students(faculty_id);
\d students;
select * from students;
select * from students where faculty_id =3;
insert into faculty(title) values('Economics');
select * from faculty;
insert into students(name, last_name) values ('Tom', 'Jerry');
alter table students alter column faculty_id DROP NOT NULL;
\d students;
insert into students(name, last_name) values ('Tom', 'Jerry');
select s.name, s.last_name, f.faculty from students as s inner join faculty as f on s.faculty_id = f.id;
select s.name, s.last_name, f.title from students as s inner join faculty as f on s.faculty_id = f.id;
select s.name, s.last_name, f.faculty from students as s left join faculty as f s.faculty_id = f.id;
select s.name, s.last_name, f.title from students as s left join faculty as f s.faculty_id = f.id;
select s.name, s.last_name, f.title from students as s left join faculty as f on s.faculty_id = f.id;
select s.name, s.last_name, f.title from students as s right join faculty as f on s.faculty_id = f.id;
select s.name, s.last_name, f.title from students as s full join faculty as f on s.faculty_id = f.id;
\l
create database shakespeare2
;
\l
\c shakespeare2'
\c shakespeare2
psql shakespeare2<shakespeare.sql;
\c shakespeare2
\dt
select * from chapter;
select * from character;
\d character_work;
select * from work;
select title, totalwords from work where totalwords>20000;
select avg(totalwords) from work;
select title, totalwords from work where totalwords > (select avg(totalwords) from work);
\dt
select * from character;
\d work;
\d character;
select section, count(plaintext) from paragraph group by section order by section;
select plaintext from paragraph;
select plaintext from paragraph where section =0;
select plaintext, wordcount from paragraph;
select paragraph;
select * from paragraph;
select plaintext, wordcount from paragraph;
select section from paragraph;
select distinct section from paragraph;
select paragraphnum from paragraph;
select ch.charname, w.title, w.genretype from character_work as ch_w inner join character as ch on ch.charid =ch_w.chaird inner join work as w on w.workid = ch_w.workid;
select ch.charname, w.title, w.genretype from character_work as ch_w inner join character as ch on ch.charid =ch_w.charid inner join work as w on w.workid = ch_w.workid;
select distinct genretype from work;
select ch.charname, w.title, w.genretype from character_work as ch_w inner join character as ch on ch.charid =ch_w.charid inner join work as w on w.workid = ch_w.workid where w.genretype = 'c';
q
select wordcount, section from paragraph group by section;
;
q
select wordcount, section from paragraph group by section;
select wordcount, section from paragraph;
select wordcount, section from paragraph group by section;
selecy wordcount, section from paragraph by wordcount;
select wordcount, section from paragraph group by section, wordcount;
select wordcount, section from paragraph group by section;
select wordcount, section from paragraph group by section;
select sum(wordcount), section from paragraph group by wordcount, section;
select section, wordcount from paragraph;
selection section, sum(wordcount) where section = 1;
select section, sum(wordcount) where section=1;
select section, sum(wordcount) from paragraph where section=1;
select section, sum(wordcount) from paragraph where section = 1 group by section;
select section, sum(wordcount) from paragraph group by section;
select section, sum(wordcount) from paragraph group by section order by section;
select section, sum(count(plaintext) from paragraph group by section order by section;
select section, sum(count(plaintext)) from paragraph group by section order by section;
select section, sum(wordcount) from paragraph group by section order by section;)
select section, sum(wordcount) from paragraph group by section order by section;;
select section, sum(count(plaintext) from paragraph group by section order by section;
select section, sum(count(plaintext)) from paragraph group by section order by section;
select section, sum(wordcount) from paragraph group by section order by section;)
select section, sum(wordcount) from paragraph group by section order by section;
select section, sum(count(plaintext)) from paragraph group by section order by section;
select charname from character where charid = 'romeo';
\timing
select charname from character where charid = 'romeo';
\timing
select charname from character where charid = 'romeo';
\timing
select charname from character where charid = 'romeo';
create index character_index on character(charname);
\timing
select longtitle from work where source = 'Moby' and totalparagraphs<100;
select longtitle, source, totalparagraphs from work where source = 'Moby' and totalparagraphs<100;
select count(*) as total_paragraph, workid from paragraph group by workid;
select count(*) as total_paragraph, w.title from paragraph as p inner join work as w on p.workid = w.workid group by w.title;
select * from work;
select count(*) as total_works, genretype from work group by genretype;
select avg(totalwords) as avg_words, avg(totalparagraphs) as avg_par, title from work group by title;
select count(*) as total_chapters, w.title from chapter as c inner join work as w on w.workid = c.workid group by w.title;
select c.charname, w.title, w.genretype, w.year from character as inner join character_work as cw on c.charid = cw.charid inner join work as w on cw.workid = w.workid where c.speechcount>200 order by w.year desc;
select c.charname, w.title, w.genretype, w.year from character c as inner join character_work as cw on c.charid = cw.charid inner join work as w on cw.workid = w.workid where c.speechcount>200 order by w.year desc;
select c.charname, w.title, w.genretype, w.year from character as c inner join character_work as cw on c.charid = cw.charid inner join work as w on cw.workid = w.workid where c.speechcount>200 order by w.year desc;
select c.charname, p.charcount from character as c inner join paragraph;
select c.charname, p.charcount from character as c inner join paragraph as p on c.charid = p.charid;
select c.charname, p.charcount from character as c inner join paragraph as p on c.charid = p.charid where p.charcount = (select max(p.charcount)) group by p.charcount;
select c.charname, p.charcount from character as c inner join paragraph as p on c.charid = p.charid where p.charcount = (select max(p.charcount) from p) group by p.charcount;
select c.charname, p.charcount from character as c inner join paragraph as p on c.charid = p.charid where p.charcount = (select max(p.charcount) from p) ;
select c.charname, p.charcount from character as c inner join paragraph as p on c.charid = p.charid where p.charnum = 10;
select c.charname, p.charcount from character as c inner join paragraph as p on c.charid = p.charid where p.charcount> 10;
select c.charname, p.charcount from character as c inner join paragraph as p on c.charid = p.charid where p.charcount> 10 order by c.charname;
select c.charname, p.charcount from character as c inner join paragraph as p on c.charid = p.charid where p.charcount = (select max(p.charcount) from p) order by c.charname;
select c.charname, p.charcount from character as c inner join paragraph as p on c.charid = p.charid where p.charcount = (select max(p.charcount) from paragraph) order by c.charname;
select c.charname, p.charcount from character as c inner join paragraph as p on c.charid = p.charid where p.charcount = (select max(p.charcount) from paragraph) group by c.charname;
select max(paragraph.chacount);
select max(paragraph.charcount) from paragraph;
select c.charname, p.charcount from character as c inner join paragraph as p on c.charid = p.charid where p.charcount = (select max(paragraph.charcount) from paragraph) group by c.charname;
select c.charname, p.charcount from character as c inner join paragraph as p on c.charid = p.charid where p.charcount = (select max(charcount) from paragraph) group by c.charname;
select c.charname, p.charcount from character as c inner join paragraph as p on c.charid = p.charid where p.charcount = (select max(charcount) from paragraph) group by c.charname;
select character.charname, paragraph.charcount from character as c inner join paragraph on c.charid = p.charid;
select character.charname, paragraph.charcount from character as c inner join paragraph on character.charid = paragraph.charid;
select character.charname, paragraph.charcount from character inner join paragraph on character.charid = paragraph.charid;
select character.charname, paragraph.charcount from character inner join paragraph on character.charid = paragraph.charid where paragraph.charcount group by character.charname;
select character.charname, paragraph.charcount from character inner join paragraph on character.charid = paragraph.charid where paragraph.charcount group by character.charname, paragraph.charcount;
select character.charname, paragraph.charcount from character inner join paragraph on character.charid = paragraph.charid group by character.charname, paragraph.charcount;
select character.charname, paragraph.charcount from character inner join paragraph on character.charid = paragraph.charid group by character.charname, paragraph.charcount where paragraph.charcount = (select max(paragraph.charcount) from paragraph);
select character.charname, paragraph.charcount from character inner join paragraph on character.charid = paragraph.charid where paragraph.charcount = (select max(paragraph.charcount) from paragraph) group by character.charname, paragraph.charcount;
select max(charcount) from paragraph;
SELECT COUNT(*) AS TOTAL_WORKS, C.CHARNAME FROM WORK AS W INNER JOIN CHARACTER_WORK AS CW ON W.WORKID= CW.WORKID INNER JOIN CHARACTER AS C ON CW.CHARID=C.CHARID GROUP BY C.CHARNAME ORDER BY TOTAL_WORKS DESC;
select (*) as total_works from work;
select count(*) as total_works from work;
select count(*) as total_works from work inner join character_work on work.workid = character_work.workid inner join character on character_work.charid = character.charid group by character.charname order by total_works desc; 
select count(*) as total_works from work inner join character_work on work.workid = character_work.workid inner join character on character_work.charid = character.charid group by character.charname order by total_works desc; 
\l
select count(work.title) as total_works from work inner join character_work on work.workid = character_work.workid inner join character on character_work.charid = character.charid group by character.charname order by total_works desc; 
select * from work;
select count(*) from work;
select count(title) from work;
select title from work;
select title from work;
select count(*) from work;
select * from work;
\s shakespearthur.txt
